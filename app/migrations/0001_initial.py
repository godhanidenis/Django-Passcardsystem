# Generated by Django 3.1.1 on 2020-09-23 12:47

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AppUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='', max_length=40)),
                ('phone', models.CharField(default='', max_length=40)),
                ('email', models.CharField(default='', max_length=40)),
                ('passcode', models.CharField(default='', max_length=40, unique=True)),
                ('id_passport_number', models.CharField(default='', max_length=40)),
                ('vehicle_number', models.CharField(default='', max_length=40)),
                ('address', models.TextField(default='', max_length=40)),
                ('approved', models.BooleanField(default=True)),
                ('is_child', models.BooleanField(default=False)),
                ('parent_user', models.CharField(blank=True, default='', max_length=40, null=True)),
                ('parent_user_url', models.CharField(blank=True, default='', max_length=40, null=True)),
                ('login_date', models.DateTimeField(blank=True, null=True)),
                ('logout_date', models.DateTimeField(blank=True, null=True)),
                ('is_logged', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name': 'App User',
                'verbose_name_plural': 'App Users',
            },
        ),
        migrations.CreateModel(
            name='appUserTypes',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app_user_type', models.CharField(default='', max_length=40)),
            ],
            options={
                'verbose_name': 'App User Type',
                'verbose_name_plural': 'App User Type',
            },
        ),
        migrations.CreateModel(
            name='Residence',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='', max_length=140)),
                ('address', models.CharField(default='', max_length=140)),
                ('contact_person', models.CharField(default='', max_length=140)),
                ('contact_email', models.CharField(default='', max_length=140)),
                ('contact_phone', models.CharField(default='', max_length=140)),
                ('company', models.CharField(blank=True, default='', max_length=140, null=True)),
                ('floor', models.CharField(blank=True, default='', max_length=140, null=True)),
                ('user', models.CharField(default='', max_length=40)),
            ],
            options={
                'verbose_name': 'Location',
                'verbose_name_plural': 'Locations',
            },
        ),
        migrations.CreateModel(
            name='residenceAreas',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('area_name', models.CharField(default='', max_length=140)),
                ('area_prefix', models.CharField(default='', max_length=140)),
                ('area_allotments_from', models.CharField(default='', max_length=140)),
                ('area_allotments_to', models.CharField(default='', max_length=140)),
                ('qr_code', models.ImageField(blank=True, upload_to='qr_codes')),
                ('code', models.CharField(blank=True, default='', max_length=40, unique=True)),
                ('code_for_app', models.CharField(blank=True, default='', max_length=40, unique=True)),
                ('residence', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='residence_for_areas', to='app.residence')),
            ],
            options={
                'verbose_name': 'Residence Area',
                'verbose_name_plural': 'Residence Areas',
            },
        ),
        migrations.CreateModel(
            name='residenceType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('residence_type', models.CharField(default='', max_length=40)),
            ],
            options={
                'verbose_name': 'Location Type',
                'verbose_name_plural': 'Location Types',
            },
        ),
        migrations.CreateModel(
            name='Resident',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('PENDING', 'Pending'), ('APPROVED', 'Approved'), ('REJECTED', 'Rejected')], default='PENDING', max_length=9)),
                ('name', models.CharField(default='', max_length=40)),
                ('phone', models.CharField(default='', max_length=40)),
                ('email', models.EmailField(default='', max_length=40)),
                ('push_id', models.CharField(default='', max_length=256, null=True)),
                ('id_passport_number', models.CharField(default='', max_length=40)),
                ('vehicle_number', models.CharField(default='', max_length=40)),
                ('block_zone', models.CharField(default='', max_length=40)),
                ('street_name', models.CharField(default='', max_length=40)),
                ('residence_number', models.CharField(default='', max_length=40)),
                ('number_of_resident', models.IntegerField(null=True)),
                ('passcode', models.CharField(blank=True, default=3740, max_length=40, unique=True)),
                ('residence_area', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='residence_area', to='app.residenceareas')),
            ],
            options={
                'verbose_name': 'Resident',
                'verbose_name_plural': 'Residents',
            },
        ),
        migrations.CreateModel(
            name='Status',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='', max_length=40)),
            ],
            options={
                'verbose_name': 'Connection Status',
                'verbose_name_plural': 'Connection Statuses',
            },
        ),
        migrations.CreateModel(
            name='visitorAccessTypes',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('access_type', models.CharField(default='', max_length=40)),
                ('main_account', models.CharField(default='', max_length=40)),
                ('can_access_website', models.BooleanField(default=False)),
                ('can_view_dashboard', models.BooleanField(default=False)),
                ('can_view_users', models.BooleanField(default=False)),
                ('can_edit_users', models.BooleanField(default=False)),
                ('can_view_locations', models.BooleanField(default=False)),
                ('can_edit_locations', models.BooleanField(default=False)),
                ('can_view_connections', models.BooleanField(default=False)),
                ('can_edit_connections', models.BooleanField(default=False)),
                ('can_view_acces_types', models.BooleanField(default=False)),
                ('can_edit_acces_types', models.BooleanField(default=False)),
                ('can_view_visitor_types', models.BooleanField(default=False)),
                ('can_edit_visitor_types', models.BooleanField(default=False)),
                ('can_view_access_passes', models.BooleanField(default=False)),
                ('can_edit_access_passes', models.BooleanField(default=False)),
                ('can_monitor', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name': 'Access Type',
                'verbose_name_plural': 'Access Type',
            },
        ),
        migrations.CreateModel(
            name='visitorType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('visitor_type', models.CharField(default='', max_length=40)),
                ('user', models.CharField(default='', max_length=40)),
            ],
            options={
                'verbose_name': 'Visitor Type',
                'verbose_name_plural': 'Visitor Types',
            },
        ),
        migrations.CreateModel(
            name='visitorValidity',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('visitor_validity', models.CharField(default='', max_length=40)),
            ],
            options={
                'verbose_name': 'Validity',
                'verbose_name_plural': 'Validities',
            },
        ),
        migrations.CreateModel(
            name='Visitor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='', max_length=40)),
                ('timedatefrom', models.DateTimeField(null=True)),
                ('timedateto', models.DateTimeField(null=True)),
                ('registered_date', models.DateTimeField(auto_now_add=True, null=True)),
                ('checkin_date', models.DateTimeField(blank=True, null=True)),
                ('checkout_date', models.DateTimeField(blank=True, null=True)),
                ('vehicle_number', models.CharField(default='', max_length=400)),
                ('number_of_guests', models.IntegerField(default=1)),
                ('code', models.CharField(default='', max_length=40)),
                ('qr_code', models.ImageField(blank=True, upload_to='visitor_qr_codes')),
                ('checkin_agent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='visitor_agent_checkin', to='app.appuser')),
                ('checkout_agent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='visitor_agent_checkout', to='app.appuser')),
                ('residence_area', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='visitor_residence_area', to='app.residenceareas')),
                ('resident', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='visitor_resident', to='app.resident')),
                ('status', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='visitor_status', to='app.status')),
                ('type', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='type', to='app.visitortype')),
            ],
            options={
                'verbose_name': 'Connection',
                'verbose_name_plural': 'Connections',
            },
        ),
        migrations.CreateModel(
            name='residenceSyndics',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('syndics_name', models.CharField(default='', max_length=140)),
                ('syndics_email', models.CharField(default='', max_length=140)),
                ('syndics_phone', models.CharField(default='', max_length=140)),
                ('residence', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='residence_for_syndics', to='app.residence')),
            ],
            options={
                'verbose_name': 'Residence Syndic',
                'verbose_name_plural': 'Residence Syndics',
            },
        ),
        migrations.AddField(
            model_name='residence',
            name='type',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='residence_type_from', to='app.residencetype'),
        ),
        migrations.CreateModel(
            name='AppUserAssignedAreas',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('residence_area', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='assigned_user_area', to='app.residenceareas')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='appuser_assigned', to='app.appuser')),
            ],
            options={
                'verbose_name': 'User Assigned Area',
                'verbose_name_plural': 'User Assigned Areas',
            },
        ),
        migrations.AddField(
            model_name='appuser',
            name='accesstype',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='appuseraccesstype', to='app.visitoraccesstypes'),
        ),
        migrations.AddField(
            model_name='appuser',
            name='residence',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='user_residence', to='app.residence'),
        ),
        migrations.AddField(
            model_name='appuser',
            name='residence_area',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='user_area', to='app.residenceareas'),
        ),
        migrations.AddField(
            model_name='appuser',
            name='usertype',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='appusertype', to='app.appusertypes'),
        ),
    ]
